@page "/"
@using BlazorServerAppCRUD.Data
@inject BlazorServerAppCRUD.Repositories.IItemRepository itemRepository;

<h1>EF Core Blazor CRUD Example</h1>


<input class="form-control" type="text" @bind-value="@item.Name" />
<br />

<input class="form-control" type="text" @bind-value="@item.Price" />
<br />

<button class="btn btn-success" @onclick="@(e=>SaveItem())">Save</button>
<br />
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Item Id</th>
            <th>Item Name</th>
            <th>Item Price</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in items)
        {
            <tr>
                <td>@item.ItemId</td>
                <td>@item.Name</td>
                <td>@item.Price</td>
                <td>
                    <button class="btn btn-warning" @onclick="@(e=>SetItemValue(item))">Edit</button>
                    <button class="btn btn-danger" @onclick="@(e=>DeleteItem(item.ItemId))">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code{
    Item item = new Item();
    List<Item> items = new List<Item>();
    protected override void OnInitialized()
    {
        LoadItems();
    }
    private void LoadItems()
    {
        items = new List<Item>();
        items = itemRepository.GetItems();
    }
    private void GetItem(int id)
    {
        item = itemRepository.Get(id);
    }
    private void DeleteItem(int id)
    {
        string message = itemRepository.Delete(id);
        LoadItems();
    }
    private void SaveItem()
    {
        if (item.ItemId == 0) item = itemRepository.Save(item);
        else item = itemRepository.Update(item);
        item = new Item();
        LoadItems();
    }
    private void SetItemValue(Item item)
    {
        this.item = item;
    }
}